{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"SIM","tagline":"International Power Seller - Inventory  / ML Listing Management","google":"","body":"\r\nSimple Inventory Management (SIM)\r\n---------------------------------\r\n\r\nA Tool for ML Power Sellers\r\nSIM is the user-facing and administration component of the Item / listing batch processor.  \r\n \r\n\r\nAmong other things, SIM offers the following feature set:\r\n\r\nSellers will send product data formatted to the Marketplace specifications.  Initially this will be CSV only, followed by [tbd](https://developers.google.com/google-apps/spreadsheets/)  The following integration specifics should also agreed upon with the Marketplace.\r\n\r\nThis operation is effectively a 'synch' or a merge of all items coming from the batch, with all items that exist presently in the marketplace.  It is assuming that the SIM middleware keeps a table mapping gp_id/item_id relationship.\r\n\r\nEach batch (say, max. of 1000 items) will be stamped with a sellerId;\r\nEvery item will be unique, identified by the gp_id , essentially ChannelAdvisor's SKU\r\n\r\nEach item record must contain these attributes at minimum: title, description, category_id*, price, currency_iso*, available_quantity, listing_type_id*, condition* - full list of supported fields: gp_id,site,\r\n\r\nFor each batch of Items in file, Seller expects to receive an error report detailing the failure of any item sent in the Product Feed.  Errors may include:\r\n1. Missing required product data\r\n2. Invalid product data / user data\r\n\r\nExample Validation:\r\n\t\"The attributes [gp_id] are invalid for category MLA3530\"  <-- attributes are stored per category\r\n\t\"Item pictures are mandatory for listing type gold\"    <-- listing is gold but pictureURL is left blank\r\n\t\"Property [initial_quantity] with value [0] is less than minimum value [1]\"  <-- general validation  \r\n\tsuch fields as price, quantity must be non-zero  certain Item props are required for listing\r\n\r\nformat,currency,title,description,category,pictureURL,quantity_available,duration,price,shippingCosts,location,condition,shipsFrom\r\n\r\nDetails <a id=\"discussion-list\" />\r\n-------\r\n\r\nMore about our project is available on basecamp [here](https://basecamp.com/1785050/projects/916773-sim)\r\n\r\nThis version of SIM is using the jQuery file upload plug\r\n\r\n\r\nInstallation and Requirements <a id=\"install\" />\r\n-----------------------------\r\n\r\nSIM from a developer client requires Grails 1.3.7 or above (latest at time of this writing was 2.0.4)\r\n\r\nOnce you have a fork of this repo, should be able to run the following :\r\n\r\n* grails test-app unit:\r\n* grails test-app integration:\r\n* grails run-app\r\n* grails prod war\r\n\r\n\r\n\r\nConfiguration  <a id=\"configuration\"></a>\r\n-------------\r\n\r\nTBD\r\n\r\n\r\nAcknowledgements <a id=\"acknowledgements\" />\r\n----------------\r\n\r\nThanks to the items-api core team in Buenos Aires, plus the team in Palo Alto - without whom:\r\n\r\n  * Rodri\r\n  * Vasanth\r\n  * Salera\r\n"}